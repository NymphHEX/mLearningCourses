Complex controls:

Complex controls reffer to the more sophisticated controls like:
- Layout
- Grid
- Progress bar
- Navigations
- Side Navigations
-etc

Those are the top. And the frequent.


1.	Layout - defines the structure for a user interface in your app, such as in an activity. 
All elements in the layout are built using a hierarchy of View and ViewGroup objects. 
A View usually draws something the user can see and interact with. 
Whereas a ViewGroup is an invisible container that defines the layout structure for View and other ViewGroup objects
 
2.  Grid Layour- layout that places its children in a rectangular grid.

The grid is composed of a set of infinitely thin lines that separate the viewing area into cells. 
Throughout the API, grid lines are referenced by grid indices. A grid with N columns has N + 1 grid indices that run from 0 through N inclusive. 
Regardless of how GridLayout is configured, grid index 0 is fixed to the leading edge of the container and grid index N is fixed to its trailing edge (after padding is taken into account).

3. A user interface element that indicates the progress of an operation. Progress bar supports two modes to represent progress: determinate, and indeterminate. 
For a visual overview of the difference between determinate and indeterminate progress modes, see Progress & activity.
Display progress bars to a user in a non-interruptive way. 
Show the progress bar in your app's user interface or in a notification instead of within a dialog.


 <ProgressBar
      android:id="@+id/indeterminateBar"
      android:layout_width="wrap_content"
      android:layout_height="wrap_content"
      />
 
 
Widget.ProgressBar.Horizontal
Widget.ProgressBar.Small
Widget.ProgressBar.Large
Widget.ProgressBar.Inverse
Widget.ProgressBar.Small.Inverse
Widget.ProgressBar.Large.Inverse



Without Complex Components we would be stuck in StoneAge with design. WE NEED THEM