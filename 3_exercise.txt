So ?

The code for the adapter:


/**
 * Created by Mihai on 3/8/2018.
 */

public class CourseCustomAdapter extends BaseAdapter {

    //region Fields
    private Context mContext;
    private final String[] web;
    private int[]    viewID;

    //endregion

    public CourseCustomAdapter(Context c,String[] web,int[] Imageid ) {
        super();
        mContext = c;
        this.viewID = Imageid;
        this.web = web;
    }

    @Override
    public int getCount() {
        return web.length;
    }

    @Override
    public Object getItem(int position) {
        return null;
    }

    @Override
    public long getItemId(int position) {
        return 0;
    }

    @Override
    public View getView(int position, View convertView, ViewGroup parent) {
        // TODO Auto-generated method stub
        View cardView;


        if (convertView == null) {

            cardView = new View(mContext);
            LayoutInflater inflater = (LayoutInflater) mContext
                    .getSystemService(Context.LAYOUT_INFLATER_SERVICE);
            cardView = inflater.inflate(R.layout.card_view_item,null);

        } else {
            cardView = (View) convertView;
        }

        LinearLayout linearLayout=(LinearLayout) cardView.findViewById(R.id.content_courses_LinearLayoutID);
        TextView textView = (TextView) linearLayout.findViewById(R.id.textViewItemCourse);
        textView.setText(web[position]);


        return cardView;
    }
}


Long isnt it

What it does: we use the inflator to get a Entitiy ( in our case a CardView)

The cardview:
<?xml version="1.0" encoding="utf-8"?>

<android.support.v7.widget.CardView
xmlns:app="http://schemas.android.com/apk/res-auto"
xmlns:android="http://schemas.android.com/apk/res/android"
android:id="@+id/cardViewID"
android:layout_width="match_parent"
android:layout_height="wrap_content"
android:layout_columnWeight="1"
android:layout_gravity="top"
android:layout_marginBottom="16dp"
android:layout_marginLeft="16dp"
android:layout_marginRight="16dp"
android:layout_rowWeight="1"
app:cardCornerRadius="8dp"
app:cardElevation="8dp">

<LinearLayout
    android:id="@+id/content_courses_LinearLayoutID"
    android:layout_width="wrap_content"
    android:layout_height="wrap_content"
    android:layout_gravity="center_horizontal|center_vertical"
    android:layout_margin="16dp"
    android:orientation="vertical">


    <TextView
        android:id="@+id/textViewItemCourse"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Me"
        android:textAlignment="center"
        android:textColor="@android:color/black"
        android:textSize="18dp"
        android:textStyle="bold" />
		
		
		....
		
		
		
And we inflate it.
Inflater - > we can say we add it. But dinamicly.

How do we use this base adapter in main activity:?



 //region  Creating dynamicly a gridview
        View myLayout=findViewById(R.id.app_bar_coursesID);
        LinearLayout linearLayout=(LinearLayout) myLayout.findViewById(R.id.content_coursesID);
        final GridView gridView=(GridView) myLayout.findViewById(R.id.mainGrid);
        //endregion

        //This string needs to be get from SQLite
        String web[];

        //Just in case u have static text view ids
        int[] tvid ={};

		
		
 //region Binding adapter
        CourseCustomAdapter adapter = new CourseCustomAdapter(Courses.this, web, tvid);
        gridView.setAdapter(adapter);
        gridView.setOnItemClickListener(new AdapterView.OnItemClickListener()
        {
            @Override
            public void onItemClick(AdapterView<?> parent, View view, int position, long id)
            {
                //CardView cw=(CardView) gridView.getChildAt(position);
                //LinearLayout linearLayout=(LinearLayout) cw.findViewById(R.id.content_courses_LinearLayoutID);
                //TextView textView = (TextView) linearLayout.findViewById(R.id.textViewItemCourse);
                createNewCourseItemActivity(/*textView.getText().toString()*/position);
            }
        });
        gridView.setVerticalScrollBarEnabled(false);
        //endregion
